from aiogram import Router, types, F
from aiogram.filters import CommandStart, Command
from src.models import User
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext, BaseStorage
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from src.utils.state import RegState


router = Router()

@router.message(CommandStart())
async def handle_message(message: types.Message,state: FSMContext, lang:str, user: User = None, user_none: bool = False):
    if user:
        if user.name is None:
            if lang == "ru":
                txt = """<b>üéâ</b>
–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥(–ª–∞) –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π. üåü

‚û°Ô∏è –£–∫–∞–∂–∏ —Å–≤–æ–µ –∏–º—è, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –Ω–∞—á–∞—Ç—å!
"""
            else:
                txt = """<b>üéâ</b>
Now let‚Äôs set up your profile so you can start meeting interesting people faster. üåü

‚û°Ô∏è Please provide your name to get started!
    """
            await state.set_state(RegState.name)
            await message.answer(txt)
        elif user.name is not None and user.age ==None:
            if lang == "ru":
                txt = f"""<b>{user.name}, –∏–º—è —É–∫–∞–∑–∞–Ω–æ! ‚úÖ</b>
–û—Ç–ª–∏—á–Ω–æ, –¥–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ç–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. üåü

‚û°Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ª—é–¥–µ–π!
"""
            else:
                txt = f"""<b>{user.name}, name provided! ‚úÖ</b>
Great, let‚Äôs continue setting up your profile. üåü

‚û°Ô∏è Please provide your age so we can suggest suitable matches!
"""
            await state.set_state(RegState.age)
            await message.answer(txt)
        elif user.name is not  None and user.age is not None and user.gender is None:
            if lang == "ru":
                txt = f"""<b>{user.name}, –≤–æ–∑—Ä–∞—Å—Ç —É–∫–∞–∑–∞–Ω! ‚úÖ</b>
–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–¥–µ–ª–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –µ—â—ë —Ç–æ—á–Ω–µ–µ. üåü

‚û°Ô∏è –í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:

""" 
                inline_keyboard=[]
                inline_keyboard.append([InlineKeyboardButton(text="üë© –ñ–µ–Ω—Å–∫–∏–π", callback_data="gender_fem")])
                inline_keyboard.append([InlineKeyboardButton(text="üë® –ú—É–∂—Å–∫–æ–π", callback_data="gender_mal")])
                inline_keyboard.append([InlineKeyboardButton(text="üåà –î—Ä—É–≥–æ–µ", callback_data="gender_oth")])

                keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
            else:
                txt = f"""<b>{user.name}, age provided! ‚úÖ</b>
Great, now let‚Äôs specify your gender to make our suggestions even more accurate. üåü

‚û°Ô∏è Please choose one of the options:

"""     
                inline_keyboard=[]
                inline_keyboard.append([InlineKeyboardButton(text="üë© Female", callback_data="gender_fem")])
                inline_keyboard.append([InlineKeyboardButton(text="üë® Male", callback_data="gender_mal")])
                inline_keyboard.append([InlineKeyboardButton(text="üåà Other", callback_data="gender_oth")])

                keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ
            await state.set_state(RegState.gender) 
            await message.answer(txt, reply_markup=keyboard)
        elif user.name is not  None and user.age is not None and user.gender is not None and user.preferences ==None:
            inline_keyboard=[]
            if lang == "ru":
                inline_keyboard.append([InlineKeyboardButton(text="ü§ù –î—Ä—É–∂–±–∞", callback_data="interest_friendship")])
                inline_keyboard.append([InlineKeyboardButton(text="‚ù§Ô∏è –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", callback_data="interest_romantic")])
                inline_keyboard.append([InlineKeyboardButton(text="üíº –ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö", callback_data="interest_partnership")])
                inline_keyboard.append([InlineKeyboardButton(text="üåç –û–±—â–µ–Ω–∏–µ –Ω–∞ —Ç–µ–º—É —ç–º–∏–≥—Ä–∞—Ü–∏–∏", callback_data="interest_emigration")])

                txt = """<b>–ü–æ–ª —É–∫–∞–∑–∞–Ω! ‚úÖ</b>
–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –∏—â–µ—à—å. üåü

‚û°Ô∏è –í—ã–±–µ—Ä–∏ —Ü–µ–ª–∏ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞:
    """
            else:
                inline_keyboard.append([InlineKeyboardButton(text="ü§ù Friendship", callback_data="interest_friendship")])
                inline_keyboard.append([InlineKeyboardButton(text="‚ù§Ô∏è Romantic relationships", callback_data="interest_romantic")])
                inline_keyboard.append([InlineKeyboardButton(text="üíº Partnership in projects", callback_data="interest_partnership")])
                inline_keyboard.append([InlineKeyboardButton(text="üåç Discussion about emigration", callback_data="interest_emigration")])

                txt = """<b>Gender specified! ‚úÖ</b>
Great, now tell us what you are looking for. üåü

‚û°Ô∏è Choose your goals for connecting:
    """
            await state.set_state(RegState.preferences)
            keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
            await message.bot.send_message(message.from_user.id ,text=txt, reply_markup=keyboard)
        elif user.name is not None and user.age is not None and user.gender is not None and user.preferences is not None and user.location is None:

            keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(
                        text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é" if lang == "ru" else "üìç Share Location",
                        request_location=True
                    )
                ]
            ],
            resize_keyboard=True,
            one_time_keyboard=True
        )

            if lang == "ru":
                txt = """<b>–¶–µ–ª–∏ –ø–æ–∏—Å–∫–∞ —É–∫–∞–∑–∞–Ω—ã! ‚úÖ</b>
–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å —Ç–≤–æ—é –ª–æ–∫–∞—Ü–∏—é, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ª—é–¥–µ–π —Ä—è–¥–æ–º. üåç

‚û°Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é. –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –º—ã —É–≤–∏–¥–∏–º —Ç–æ–ª—å–∫–æ <b>–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</b>.
"""
            else:
                txt = """<b>Search goals saved! ‚úÖ</b>
Great, now we need your location to suggest people nearby. üåç

‚û°Ô∏è Please press the button below to share your location. Don‚Äôt worry, we will only see your <b>approximate location</b>.
"""
            await state.set_state(RegState.location)
            await message.bot.send_message(message.from_user.id ,text=txt, reply_markup=keyboard)

        elif user.name is not None and user.age is not None and user.gender is not None and user.preferences is not None and user.location is not None and user.about is None:
            if lang == "ru":
                txt = """<b>–õ–æ–∫–∞—Ü–∏—è —É–∫–∞–∑–∞–Ω–∞! ‚úÖ</b>
–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ. üåü

‚û°Ô∏è –ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ —Å–µ–±–µ: —Ç–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã, —Ö–æ–±–±–∏ –∏–ª–∏ —á—Ç–æ-—Ç–æ, —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –∑–Ω–∞–ª–∏ –æ —Ç–µ–±–µ.
"""
            else:
                txt = """<b>Location saved! ‚úÖ</b>
Great, now tell us a bit about yourself. üåü

‚û°Ô∏è Write a short description about yourself: your interests, hobbies, or anything you‚Äôd like others to know about you.
"""
            await state.set_state(RegState.about)
            await message.bot.send_message(message.from_user.id, txt)
        elif user.name is not None and user.age is not None and user.gender is not None and user.preferences is not None and user.location is not None and user.about is not None and (user.hobbies is None or len(user.hobbies) < 5):
            await state.set_state(RegState.hobbies)

            # –£–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞ –¥–≤—É—Ö —è–∑—ã–∫–∞—Ö —Å –Ω–æ–º–µ—Ä–∞–º–∏
            interests = [
                (1, "–°–ø–æ—Ä—Ç", "Sport"), (2, "–ú—É–∑—ã–∫–∞", "Music"), (3, "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "Travel"), 
                (4, "–ö–∏–Ω–æ", "Movies"), (5, "–ö—É–ª–∏–Ω–∞—Ä–∏—è", "Cooking"), (6, "–ò—Å–∫—É—Å—Å—Ç–≤–æ", "Art"), 
                (7, "–¢–∞–Ω—Ü—ã", "Dancing"), (8, "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "Technology"), (9, "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "Literature"), 
                (10, "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "Photography"), (11, "–ò–≥—Ä—ã", "Games"), (12, "–ü—Ä–∏—Ä–æ–¥–∞", "Nature"), 
                (13, "–ê–≤—Ç–æ–º–æ–±–∏–ª–∏", "Cars"), (14, "–ú–æ–¥–∞", "Fashion"), (15, "–ó–¥–æ—Ä–æ–≤—å–µ", "Health")
            ]

            inlinekeyboard = []
            row = []
            hobbies = user.hobbies or []  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —É–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–≤–ª–µ—á–µ–Ω–∏–π, –ø–æ 3 –≤ —Ä—è–¥
            for i, (number, interest_ru, interest_en) in enumerate(interests[:15], start=1):
                text = ("üîπ" if str(number) in hobbies else "") + (interest_ru if lang == "ru" else interest_en)
                row.append(InlineKeyboardButton(
                    text=text,
                    callback_data=f"intrs_{number}"
                ))
                # –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ 3 –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–Ω–æ–ø–∫–∞ –≤ —Å–ø–∏—Å–∫–µ
                if len(row) == 3 or i == len(interests[:15]):
                    inlinekeyboard.append(row)
                    row = []  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä—è–¥–∞

            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–µ–ª–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É
            inlinekeyboard.append([
                InlineKeyboardButton(text="üö´" if lang == "ru" else "üö´", callback_data="intrs_z"),
                InlineKeyboardButton(text="‚û°Ô∏è" if lang == "ru" else "‚û°Ô∏è Next", callback_data="intrs_page_next")
            ])

            keyboard = InlineKeyboardMarkup(inline_keyboard=inlinekeyboard)

            if lang == "ru":
                if hobbies:
                    txt = f"<b>–£ –≤–∞—Å —É–∂–µ –≤—ã–±—Ä–∞–Ω–æ {len(hobbies)}/5 —É–≤–ª–µ—á–µ–Ω–∏–π ‚úÖ</b>\n"
                else:
                    txt = "<b>–ó–∞–ø–∏—Å–∞–ª–∏ ‚úÖ</b>\n"
                txt += "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –¥–æ 5 —É–≤–ª–µ—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–∏—Å—ã–≤–∞—é—Ç —Ç–µ–±—è. üåü\n\n‚û°Ô∏è –ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —É–≤–ª–µ—á–µ–Ω–∏—è. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ \"<b>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å‚úÖ</b>\"."
            else:
                if hobbies:
                    txt = f"<b>You have already selected {len(hobbies)}/5 hobbies ‚úÖ</b>\n"
                else:
                    txt = "<b>Saved ‚úÖ</b>\n"
                txt += "Great, now select up to 5 hobbies that describe you. üåü\n\n‚û°Ô∏è Click on the buttons to select your hobbies. Once you're done, click \"<b>Save‚úÖ</b>\"."

            await message.answer(txt, reply_markup=keyboard)
        elif user.name is not None and user.age is not None and user.gender is not None and user.preferences is not None and user.location is not None and user.about is not None and user.hobbies is not None and user.medias is None:
            txt ="""

–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç <b>1 –¥–æ 3 –º–µ–¥–∏–∞</b> (—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ –≤–∏–¥–µ–æ), —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –º–æ–≥–ª–∏ —É–∑–Ω–∞—Ç—å –≤–∞—Å –ª—É—á—à–µ.  
–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å. ‚è©""" if lang == "ru" else """

Now, please send <b>1 to 3 media</b> (photos or videos) so others can get to know you better.  
Or press "Skip" to continue. ‚è©"""
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å üîÑ" if lang == "ru" else "Skip üîÑ", callback_data="skip_album")]
                ])
            await state.set_state(RegState.media)
            data = await state.get_data()
            
            msg = await message.bot.send_message(chat_id=message.from_user.id ,text=txt, reply_markup=keyboard)
            data["idmsg_media"]=msg.message_id
            await state.update_data(data=data)


            
        









@router.message(Command("block"))
async def handle_message(message: types.Message, user: User = None, user_none: bool = False):
    user= await User.get_or_none(user_id=message.from_user.id)
    if user:
        user.status_block="Deactive"
        await user.save()

@router.message(Command("del"))
async def handle_message(message: types.Message, state: FSMContext, user: User = None, user_none: bool = False):
    user= await User.get_or_none(user_id=message.from_user.id)
    
    if user:
        user.medias=None
        await user.save()

        
async def choise_lang(message: types.Message, lang: str):
    if lang['lang']=="ru":
    
        txt="""<b>–ü—Ä–∏–≤–µ—Ç! üëã</b>
–ù–∞ —Å–≤—è–∑–∏ <b>üíñEmi-Dateüíñ</b> ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –¥–ª—è –ª—é–¥–µ–π –≤ —ç–º–∏–≥—Ä–∞—Ü–∏–∏. üåç‚ú®

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ —É–¥–æ–±–µ–Ω:
"""
    else:
        txt="""<b>Hi there! üëã</b>
Welcome to <b>üíñEmi-Dateüíñ</b> ‚Äî your go-to bot for connecting with people in emigration. üåç‚ú®

To get started, please select your preferred language:
"""
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    
    inline_keyboard=[]
    inline_keyboard.append([InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")])
    inline_keyboard.append([InlineKeyboardButton(text="üá∫üá∏ English", callback_data="lang_en")])

    keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)

    await message.answer(text=txt, reply_markup=keyboard)

















@router.callback_query(lambda c: "lang_" in c.data)
async def callback_handler(callback_query: CallbackQuery, state: FSMContext, lang: str):
    lang = (callback_query.data.split("_"))[1]
    user_id = callback_query.from_user.id
    user= await User.get_or_none(user_id=user_id)
    if user:
        user.lang=lang
        await user.save()
    if user.name==None:
        keyboard = None
        if lang == "ru":
            txt = """<b>–û—Ç–ª–∏—á–Ω–æ! üéâ</b>
–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥(–ª–∞) –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ª—é–¥–µ–π. üåü

‚û°Ô∏è –£–∫–∞–∂–∏ —Å–≤–æ–µ –∏–º—è, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –Ω–∞—á–∞—Ç—å!
"""
        else:
            txt = """<b>Great! üéâ</b>
Now let‚Äôs set up your profile so you can start meeting interesting people faster. üåü

‚û°Ô∏è Please provide your name to get started!
    """
        await callback_query.bot.edit_message_text(text=txt, chat_id=user_id, message_id=callback_query.message.message_id, reply_markup=None)
        
        
        await state.set_state(RegState.name)
        
    elif user.name is not  None and user.age ==None:
        keyboard = None
        if lang == "ru":
            txt = """<b>–ò–º—è —É–∫–∞–∑–∞–Ω–æ! ‚úÖ</b>
–û—Ç–ª–∏—á–Ω–æ, –¥–∞–≤–∞–π –ø—Ä–æ–¥–æ–ª–∂–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ç–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. üåü

‚û°Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ª—é–¥–µ–π!
"""
        else:
            txt = """<b>Name provided! ‚úÖ</b>
Great, let‚Äôs continue setting up your profile. üåü

‚û°Ô∏è Please provide your age so we can suggest suitable matches!
"""
        await callback_query.bot.edit_message_text(text=txt, chat_id=user_id, message_id=callback_query.message.message_id, reply_markup=None)

        await state.set_state(RegState.age)

    elif user.name is not  None and user.age is not None and user.gender ==None:
        if lang == "ru":
            txt = """<b>–í–æ–∑—Ä–∞—Å—Ç —É–∫–∞–∑–∞–Ω! ‚úÖ</b>
–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–¥–µ–ª–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –µ—â—ë —Ç–æ—á–Ω–µ–µ. üåü

‚û°Ô∏è –í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:

""" 
            inline_keyboard=[]
            inline_keyboard.append([InlineKeyboardButton(text="üë© –ñ–µ–Ω—Å–∫–∏–π", callback_data="gender_fem")])
            inline_keyboard.append([InlineKeyboardButton(text="üë® –ú—É–∂—Å–∫–æ–π", callback_data="gender_mal")])
            inline_keyboard.append([InlineKeyboardButton(text="üåà –î—Ä—É–≥–æ–µ", callback_data="gender_oth")])

            keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
        else:
            txt = """<b>Age provided! ‚úÖ</b>
Great, now let‚Äôs specify your gender to make our suggestions even more accurate. üåü

‚û°Ô∏è Please choose one of the options:

"""     
            inline_keyboard=[]
            inline_keyboard.append([InlineKeyboardButton(text="üë© Female", callback_data="gender_fem")])
            inline_keyboard.append([InlineKeyboardButton(text="üë® Male", callback_data="gender_mal")])
            inline_keyboard.append([InlineKeyboardButton(text="üåà Other", callback_data="gender_oth")])

            keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
        await state.set_state(RegState.gender)
        await callback_query.bot.edit_message_text(text=txt, chat_id=user_id, message_id=callback_query.message.message_id, reply_markup=keyboard)

    elif user.name is not  None and user.age is not None and user.gender is not None and user.preferences ==None:
        inline_keyboard = []
    
        if lang == "ru":
            inline_keyboard.append([InlineKeyboardButton(text="ü§ù –î—Ä—É–∂–±–∞", callback_data="interest_friendship")])
            inline_keyboard.append([InlineKeyboardButton(text="‚ù§Ô∏è –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", callback_data="interest_romantic")])
            inline_keyboard.append([InlineKeyboardButton(text="üíº –ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö", callback_data="interest_partnership")])
            inline_keyboard.append([InlineKeyboardButton(text="üåç –û–±—â–µ–Ω–∏–µ –Ω–∞ —Ç–µ–º—É —ç–º–∏–≥—Ä–∞—Ü–∏–∏", callback_data="interest_emigration")])

            txt = """<b>–ü–æ–ª —É–∫–∞–∑–∞–Ω! ‚úÖ</b>
    –û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –∏—â–µ—à—å. üåü

    ‚û°Ô∏è –í—ã–±–µ—Ä–∏ —Ü–µ–ª–∏ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞:
    """
        else:
            inline_keyboard.append([InlineKeyboardButton(text="ü§ù Friendship", callback_data="interest_friendship")])
            inline_keyboard.append([InlineKeyboardButton(text="‚ù§Ô∏è Romantic relationships", callback_data="interest_romantic")])
            inline_keyboard.append([InlineKeyboardButton(text="üíº Partnership in projects", callback_data="interest_partnership")])
            inline_keyboard.append([InlineKeyboardButton(text="üåç Discussion about emigration", callback_data="interest_emigration")])

            txt = """<b>Gender specified! ‚úÖ</b>
    Great, now tell us what you are looking for. üåü

    ‚û°Ô∏è Choose your goals for connecting:
    """
        await state.set_state(RegState.preferences)
        keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
        await callback_query.bot.edit_message_text(text=txt, chat_id=user_id, message_id=callback_query.message.message_id, reply_markup=keyboard)

    elif user.name is not None and user.age is not None and user.gender is not None and user.preferences is not None and user.location is None:
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(
                        text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é" if lang == "ru" else "üìç Share Location",
                        request_location=True
                    )
                ]
            ],
            resize_keyboard=True,
            one_time_keyboard=True
        )

        if lang == "ru":
            txt = """<b>–¶–µ–ª–∏ –ø–æ–∏—Å–∫–∞ —É–∫–∞–∑–∞–Ω—ã! ‚úÖ</b>
–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å —Ç–≤–æ—é –ª–æ–∫–∞—Ü–∏—é, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ª—é–¥–µ–π —Ä—è–¥–æ–º. üåç

‚û°Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é. –ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –º—ã —É–≤–∏–¥–∏–º —Ç–æ–ª—å–∫–æ <b>–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</b>.
"""
        else:
            txt = """<b>Search goals saved! ‚úÖ</b>
Great, now we need your location to suggest people nearby. üåç

‚û°Ô∏è Please press the button below to share your location. Don‚Äôt worry, we will only see your <b>approximate location</b>.
"""
        await state.set_state(RegState.location)
        await callback_query.bot.edit_message_text(text=txt, chat_id=user_id, message_id=callback_query.message.message_id, reply_markup=keyboard)

    elif user.name is not None and user.age is not None and user.gender is not None and user.preferences is not None and user.location is not None and user.about is None:
        if lang == "ru":
            txt = """<b>–õ–æ–∫–∞—Ü–∏—è —É–∫–∞–∑–∞–Ω–∞! ‚úÖ</b>
–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ. üåü

‚û°Ô∏è –ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ —Å–µ–±–µ: —Ç–≤–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã, —Ö–æ–±–±–∏ –∏–ª–∏ —á—Ç–æ-—Ç–æ, —á—Ç–æ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –∑–Ω–∞–ª–∏ –æ —Ç–µ–±–µ.
"""
        else:
            txt = """<b>Location saved! ‚úÖ</b>
Great, now tell us a bit about yourself. üåü

‚û°Ô∏è Write a short description about yourself: your interests, hobbies, or anything you‚Äôd like others to know about you.
"""
        await state.set_state(RegState.about)
    elif user.name is not None and user.age is not None and user.gender is not None and user.preferences is not None and user.location is not None and user.about is not None and user.hobbies is None:
        await state.set_state(RegState.hobbies)

            # –£–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞ –¥–≤—É—Ö —è–∑—ã–∫–∞—Ö —Å –Ω–æ–º–µ—Ä–∞–º–∏
        interests = [
            (1, "–°–ø–æ—Ä—Ç", "Sport"), (2, "–ú—É–∑—ã–∫–∞", "Music"), (3, "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "Travel"), 
            (4, "–ö–∏–Ω–æ", "Movies"), (5, "–ö—É–ª–∏–Ω–∞—Ä–∏—è", "Cooking"), (6, "–ò—Å–∫—É—Å—Å—Ç–≤–æ", "Art"), 
            (7, "–¢–∞–Ω—Ü—ã", "Dancing"), (8, "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "Technology"), (9, "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "Literature"), 
            (10, "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "Photography"), (11, "–ò–≥—Ä—ã", "Games"), (12, "–ü—Ä–∏—Ä–æ–¥–∞", "Nature"), 
            (13, "–ê–≤—Ç–æ–º–æ–±–∏–ª–∏", "Cars"), (14, "–ú–æ–¥–∞", "Fashion"), (15, "–ó–¥–æ—Ä–æ–≤—å–µ", "Health")
        ]

        inlinekeyboard = []
        row = []
        hobbies = user.hobbies or []  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —É–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–≤–ª–µ—á–µ–Ω–∏–π, –ø–æ 3 –≤ —Ä—è–¥
        for i, (number, interest_ru, interest_en) in enumerate(interests[:15], start=1):
            text = ("üîπ" if str(number) in hobbies else "") + (interest_ru if lang == "ru" else interest_en)
            row.append(InlineKeyboardButton(
                text=text,
                callback_data=f"intrs_{number}"
            ))
            # –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ 3 –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–Ω–æ–ø–∫–∞ –≤ —Å–ø–∏—Å–∫–µ
            if len(row) == 3 or i == len(interests[:15]):
                inlinekeyboard.append(row)
                row = []  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä—è–¥–∞

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–µ–ª–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É
        inlinekeyboard.append([
            InlineKeyboardButton(text="üö´" if lang == "ru" else "üö´", callback_data="intrs_z"),
            InlineKeyboardButton(text="‚û°Ô∏è" if lang == "ru" else "‚û°Ô∏è Next", callback_data="intrs_page_next")
        ])

        keyboard = InlineKeyboardMarkup(inline_keyboard=inlinekeyboard)

        if lang == "ru":
            if hobbies:
                txt = f"<b>–£ –≤–∞—Å —É–∂–µ –≤—ã–±—Ä–∞–Ω–æ {len(hobbies)}/5 —É–≤–ª–µ—á–µ–Ω–∏–π ‚úÖ</b>\n"
            else:
                txt = "<b>–ó–∞–ø–∏—Å–∞–ª–∏ ‚úÖ</b>\n"
            txt += "–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –¥–æ 5 —É–≤–ª–µ—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–∏—Å—ã–≤–∞—é—Ç —Ç–µ–±—è. üåü\n\n‚û°Ô∏è –ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —É–≤–ª–µ—á–µ–Ω–∏—è. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ \"<b>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å‚úÖ</b>\"."
        else:
            if hobbies:
                txt = f"<b>You have already selected {len(hobbies)}/5 hobbies ‚úÖ</b>\n"
            else:
                txt = "<b>Saved ‚úÖ</b>\n"
            txt += "Great, now select up to 5 hobbies that describe you. üåü\n\n‚û°Ô∏è Click on the buttons to select your hobbies. Once you're done, click \"<b>Save‚úÖ</b>\"."

        await callback_query.bot.edit_message_text(text=txt, chat_id=user_id, message_id=callback_query.message.message_id, reply_markup=keyboard)
    elif user.name is not None and user.age is not None and user.gender is not None and user.preferences is not None and user.location is not None and user.about is not None and user.hobbies is not None and user.medias is None:
        txt ="""üéâ <b>–û—Ç–ª–∏—á–Ω–æ!</b> –í–∞—à–∏ —Ö–æ–±–±–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.  

–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç <b>1 –¥–æ 3 –º–µ–¥–∏–∞</b> (—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ –≤–∏–¥–µ–æ), —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –º–æ–≥–ª–∏ —É–∑–Ω–∞—Ç—å –≤–∞—Å –ª—É—á—à–µ.  
–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å. ‚è©""" if lang == "ru" else """üéâ <b>Great!</b> Your hobbies have been successfully saved.  

Now, please send <b>1 to 3 media</b> (photos or videos) so others can get to know you better.  
Or press "Skip" to continue. ‚è©"""
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å üîÑ" if lang == "ru" else "Skip üîÑ", callback_data="skip_album")]
            ])
        await state.set_state(RegState.media)
        data = await state.get_data()
        
        msg = await callback_query.bot.send_message(chat_id=callback_query.from_user.id ,text=txt, reply_markup=keyboard)
        data["idmsg_media"]=msg.message_id
        await state.update_data(data=data)




  





